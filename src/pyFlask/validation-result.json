{
    "code_description_file": {
        "ann1__code_verification_status": [
            "no"
        ],
        "ann2__code_validation_status": [
            "no"
        ],
        "ann3__certification_status": [
            "no"
        ],
        "ann4__onboarded_to_o_s_parc_status": [
            "no"
        ],
        "ann5__testing_on_o_s_parc_status": [
            "no"
        ],
        "number_of_inputs": [
            10
        ],
        "number_of_outputs": [
            11
        ],
        "tsr10a__conform_to_standards_rating_0_4": [
            0
        ],
        "tsr1__define_context_clearly_rating_0_4": [
            0
        ],
        "tsr2__use_appropriate_data_rating_0_4": [
            0
        ],
        "tsr3__evaluate_within_context_rating_0_4": [
            0
        ],
        "tsr4__list_limitations_explicitly_rating_0_4": [
            0
        ],
        "tsr5__use_version_control_rating_0_4": [
            0
        ],
        "tsr6__document_adequately_rating_0_4": [
            0
        ],
        "tsr7__disseminate_broadly_rating_0_4": [
            0
        ],
        "tsr8__get_independent_reviews_rating_0_4": [
            0
        ],
        "tsr9__test_competing_implementations_rating_0_4": [
            0
        ]
    },
    "contributors": [
        {
            "contributor_affiliation": 1,
            "contributor_role": [
                "PrincipalInvestigator"
            ],
            "id": "file:///C:/Users/CMarroquin/temp-datasets/DatasetTemplate/contributors/no-orcid-no-name"
        }
    ],
    "dir_structure": [],
    "errors": [
        {
            "blame": "stage",
            "message": "'path_metadata' is a required property",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "id",
                "meta",
                "contributors",
                "path_metadata",
                "prov"
            ]
        },
        {
            "blame": "stage",
            "message": "'cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^N:dataset:'",
            "path": "deque(['id'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^N:dataset:"
        },
        {
            "blame": "stage",
            "message": "'description' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'funding' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'protocol_url_or_doi' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'award_number' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'organ' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'modality' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'techniques' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'title' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "None is not of type 'string'",
            "path": "deque(['meta', 'timestamp_created'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'timestamp_created', 'type'])",
            "validator": "type",
            "validator_value": "string"
        },
        {
            "blame": "stage",
            "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://app\\\\.pennsieve\\\\.io/N:organization:'",
            "path": "deque(['meta', 'uri_human'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_human', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^https://app\\.pennsieve\\.io/N:organization:"
        },
        {
            "blame": "stage",
            "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://api\\\\.pennsieve\\\\.io/(datasets|packages)/'",
            "path": "deque(['meta', 'uri_api'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_api', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^https://api\\.pennsieve\\.io/(datasets|packages)/"
        },
        {
            "blame": "stage",
            "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
            "path": "deque(['contributors'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'oneOf'])",
            "validator": "oneOf",
            "validator_value": [
                {
                    "contains": {
                        "properties": {
                            "is_contact_person": {
                                "enum": [
                                    true
                                ],
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "is_contact_person"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                {
                    "contains": {
                        "properties": {
                            "contributor_role": {
                                "contains": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "contributor_role"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "1 is not valid under any of the given schemas",
            "path": "deque(['contributors', 0, 'contributor_affiliation'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'items', 'properties', 'contributor_affiliation', 'anyOf'])",
            "validator": "anyOf",
            "validator_value": [
                {
                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                    "type": "string"
                },
                {
                    "type": "string"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['subjects', 0])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'subjects', 'items', 'required'])",
            "validator": "required",
            "validator_value": [
                "subject_id",
                "species"
            ]
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['samples', 0, 'sample_id'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['samples', 0, 'subject_id'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'name' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'description' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'funding' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'protocol_url_or_doi' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
            "path": "deque(['inputs', 'dataset_description_file', 'contributors'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'properties', 'contributors', 'oneOf'])",
            "validator": "oneOf",
            "validator_value": [
                {
                    "contains": {
                        "properties": {
                            "is_contact_person": {
                                "enum": [
                                    true
                                ],
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "is_contact_person"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "jsonld_include": {
                            "@type": [
                                "sparc:Person",
                                "owl:NamedIndividual"
                            ]
                        },
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                {
                    "contains": {
                        "properties": {
                            "contributor_role": {
                                "contains": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "contributor_role"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "jsonld_include": {
                            "@type": [
                                "sparc:Person",
                                "owl:NamedIndividual"
                            ]
                        },
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['inputs', 'subjects_file', 'subjects', 0])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'subjects_file', 'properties', 'subjects', 'items', 'required'])",
            "validator": "required",
            "validator_value": [
                "subject_id",
                "species"
            ]
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['inputs', 'samples_file', 'samples', 0, 'sample_id'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['inputs', 'samples_file', 'samples', 0, 'subject_id'])",
            "pipeline_stage": "SDSPipeline.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'path_metadata' is a required property",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "id",
                "meta",
                "contributors",
                "path_metadata",
                "prov"
            ]
        },
        {
            "blame": "stage",
            "message": "'cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^N:dataset:'",
            "path": "deque(['id'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^N:dataset:"
        },
        {
            "blame": "stage",
            "message": "'description' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'funding' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'protocol_url_or_doi' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'award_number' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'organ' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'modality' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "'title' is a required property",
            "path": "deque(['meta'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "description",
                "funding",
                "protocol_url_or_doi",
                "number_of_subjects",
                "number_of_samples",
                "award_number",
                "principal_investigator",
                "species",
                "organ",
                "modality",
                "techniques",
                "contributor_count",
                "uri_human",
                "uri_api",
                "sparse",
                "files",
                "dirs",
                "size",
                "folder_name",
                "title",
                "template_schema_version",
                "number_of_subjects",
                "number_of_samples",
                "timestamp_created",
                "timestamp_updated",
                "timestamp_updated_contents"
            ]
        },
        {
            "blame": "stage",
            "message": "None is not of type 'string'",
            "path": "deque(['meta', 'timestamp_created'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'timestamp_created', 'type'])",
            "validator": "type",
            "validator_value": "string"
        },
        {
            "blame": "stage",
            "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://app\\\\.pennsieve\\\\.io/N:organization:'",
            "path": "deque(['meta', 'uri_human'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_human', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^https://app\\.pennsieve\\.io/N:organization:"
        },
        {
            "blame": "stage",
            "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://api\\\\.pennsieve\\\\.io/(datasets|packages)/'",
            "path": "deque(['meta', 'uri_api'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_api', 'pattern'])",
            "validator": "pattern",
            "validator_value": "^https://api\\.pennsieve\\.io/(datasets|packages)/"
        },
        {
            "blame": "stage",
            "message": "[] is too short",
            "path": "deque(['meta', 'techniques'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'techniques', 'minItems'])",
            "validator": "minItems",
            "validator_value": 1
        },
        {
            "blame": "stage",
            "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator'], 'id': 'file:///C:/Users/CMarroquin/temp-datasets/DatasetTemplate/contributors/no-orcid-no-name'}] is not valid under any of the given schemas",
            "path": "deque(['contributors'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'oneOf'])",
            "validator": "oneOf",
            "validator_value": [
                {
                    "contains": {
                        "properties": {
                            "is_contact_person": {
                                "enum": [
                                    true
                                ],
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "is_contact_person"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                {
                    "contains": {
                        "properties": {
                            "contributor_role": {
                                "contains": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "contributor_role"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "1 is not valid under any of the given schemas",
            "path": "deque(['contributors', 0, 'contributor_affiliation'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'items', 'properties', 'contributor_affiliation', 'anyOf'])",
            "validator": "anyOf",
            "validator_value": [
                {
                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                    "type": "string"
                },
                {
                    "type": "string"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['subjects', 0])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'subjects', 'items', 'required'])",
            "validator": "required",
            "validator_value": [
                "subject_id",
                "species"
            ]
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['samples', 0, 'sample_id'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['samples', 0, 'subject_id'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'records' is a required property",
            "path": "deque(['specimen_dirs'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'specimen_dirs', 'required'])",
            "validator": "required",
            "validator_value": [
                "records"
            ]
        },
        {
            "blame": "stage",
            "message": "'name' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'description' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'funding' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "'protocol_url_or_doi' is a required property",
            "path": "deque(['inputs', 'dataset_description_file'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
            "validator": "required",
            "validator_value": [
                "template_schema_version",
                "name",
                "description",
                "funding",
                "protocol_url_or_doi",
                "contributors",
                "number_of_subjects",
                "number_of_samples"
            ]
        },
        {
            "blame": "stage",
            "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
            "path": "deque(['inputs', 'dataset_description_file', 'contributors'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'properties', 'contributors', 'oneOf'])",
            "validator": "oneOf",
            "validator_value": [
                {
                    "contains": {
                        "properties": {
                            "is_contact_person": {
                                "enum": [
                                    true
                                ],
                                "type": "boolean"
                            }
                        },
                        "required": [
                            "is_contact_person"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "jsonld_include": {
                            "@type": [
                                "sparc:Person",
                                "owl:NamedIndividual"
                            ]
                        },
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                },
                {
                    "contains": {
                        "properties": {
                            "contributor_role": {
                                "contains": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson"
                                    ],
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        },
                        "required": [
                            "contributor_role"
                        ],
                        "type": "object"
                    },
                    "items": {
                        "jsonld_include": {
                            "@type": [
                                "sparc:Person",
                                "owl:NamedIndividual"
                            ]
                        },
                        "properties": {
                            "affiliation": {
                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                "type": "string"
                            },
                            "blackfynn_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasBlackfynnUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "contributor_affiliation": {
                                "anyOf": [
                                    {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasAffiliation",
                                    "@type": "@id"
                                }
                            },
                            "contributor_name": {
                                "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                "type": "string"
                            },
                            "contributor_orcid": {
                                "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                "type": "string"
                            },
                            "contributor_role": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/"
                                    },
                                    "@id": "TEMP:hasRole",
                                    "@type": "@id"
                                },
                                "items": {
                                    "enum": [
                                        "CorrespondingAuthor",
                                        "ContactPerson",
                                        "Creator",
                                        "DataCollector",
                                        "DataCurator",
                                        "DataManager",
                                        "Distributor",
                                        "Editor",
                                        "HostingInstitution",
                                        "PrincipalInvestigator",
                                        "CoInvestigator",
                                        "Producer",
                                        "ProjectLeader",
                                        "ProjectManager",
                                        "ProjectMember",
                                        "RegistrationAgency",
                                        "RegistrationAuthority",
                                        "RelatedPerson",
                                        "Researcher",
                                        "ResearchGroup",
                                        "RightsHolder",
                                        "Sponsor",
                                        "Supervisor",
                                        "WorkPackageLeader",
                                        "Other"
                                    ],
                                    "type": "string"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "data_remote_user_id": {
                                "context_value": {
                                    "@context": {
                                        "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                    },
                                    "@id": "TEMP:hasDataRemoteUserId",
                                    "@type": "@id"
                                },
                                "type": "string"
                            },
                            "errors": {
                                "items": {
                                    "type": "object"
                                },
                                "minItems": 1,
                                "type": "array"
                            },
                            "first_name": {
                                "context_value": "sparc:firstName",
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "is_contact_person": {
                                "type": "boolean"
                            },
                            "last_name": {
                                "context_value": "sparc:lastName",
                                "type": "string"
                            },
                            "middle_name": {
                                "context_value": "TEMP:middleName",
                                "type": "string"
                            }
                        },
                        "type": "object"
                    },
                    "type": "array"
                }
            ]
        },
        {
            "blame": "stage",
            "message": "'species' is a required property",
            "path": "deque(['inputs', 'subjects_file', 'subjects', 0])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'subjects_file', 'properties', 'subjects', 'items', 'required'])",
            "validator": "required",
            "validator_value": [
                "subject_id",
                "species"
            ]
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['inputs', 'samples_file', 'samples', 0, 'sample_id'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        },
        {
            "blame": "stage",
            "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
            "path": "deque(['inputs', 'samples_file', 'samples', 0, 'subject_id'])",
            "pipeline_stage": "PipelineExtras.data",
            "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
            "validator": "pattern",
            "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
        }
    ],
    "id": "cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate",
    "inputs": {
        "code_description_file": {
            "ann1__code_verification_status": [
                "no"
            ],
            "ann2__code_validation_status": [
                "no"
            ],
            "ann3__certification_status": [
                "no"
            ],
            "ann4__onboarded_to_o_s_parc_status": [
                "no"
            ],
            "ann5__testing_on_o_s_parc_status": [
                "no"
            ],
            "number_of_inputs": [
                10
            ],
            "number_of_outputs": [
                11
            ],
            "tsr10a__conform_to_standards_rating_0_4": [
                0
            ],
            "tsr1__define_context_clearly_rating_0_4": [
                0
            ],
            "tsr2__use_appropriate_data_rating_0_4": [
                0
            ],
            "tsr3__evaluate_within_context_rating_0_4": [
                0
            ],
            "tsr4__list_limitations_explicitly_rating_0_4": [
                0
            ],
            "tsr5__use_version_control_rating_0_4": [
                0
            ],
            "tsr6__document_adequately_rating_0_4": [
                0
            ],
            "tsr7__disseminate_broadly_rating_0_4": [
                0
            ],
            "tsr8__get_independent_reviews_rating_0_4": [
                0
            ],
            "tsr9__test_competing_implementations_rating_0_4": [
                0
            ]
        },
        "dataset_description_file": {
            "contributors": [
                {
                    "contributor_affiliation": 1,
                    "contributor_role": [
                        "PrincipalInvestigator"
                    ]
                }
            ],
            "errors": [
                {
                    "blame": "stage",
                    "message": "'name' is a required property",
                    "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                    "schema_path": "deque(['required'])",
                    "validator": "required",
                    "validator_value": [
                        "template_schema_version",
                        "name",
                        "description",
                        "funding",
                        "protocol_url_or_doi",
                        "contributors",
                        "number_of_subjects",
                        "number_of_samples"
                    ]
                },
                {
                    "blame": "stage",
                    "message": "'description' is a required property",
                    "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                    "schema_path": "deque(['required'])",
                    "validator": "required",
                    "validator_value": [
                        "template_schema_version",
                        "name",
                        "description",
                        "funding",
                        "protocol_url_or_doi",
                        "contributors",
                        "number_of_subjects",
                        "number_of_samples"
                    ]
                },
                {
                    "blame": "stage",
                    "message": "'funding' is a required property",
                    "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                    "schema_path": "deque(['required'])",
                    "validator": "required",
                    "validator_value": [
                        "template_schema_version",
                        "name",
                        "description",
                        "funding",
                        "protocol_url_or_doi",
                        "contributors",
                        "number_of_subjects",
                        "number_of_samples"
                    ]
                },
                {
                    "blame": "stage",
                    "message": "'protocol_url_or_doi' is a required property",
                    "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                    "schema_path": "deque(['required'])",
                    "validator": "required",
                    "validator_value": [
                        "template_schema_version",
                        "name",
                        "description",
                        "funding",
                        "protocol_url_or_doi",
                        "contributors",
                        "number_of_subjects",
                        "number_of_samples"
                    ]
                },
                {
                    "blame": "stage",
                    "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
                    "path": "deque(['contributors'])",
                    "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                    "schema_path": "deque(['properties', 'contributors', 'oneOf'])",
                    "validator": "oneOf",
                    "validator_value": [
                        {
                            "contains": {
                                "properties": {
                                    "is_contact_person": {
                                        "enum": [
                                            true
                                        ],
                                        "type": "boolean"
                                    }
                                },
                                "required": [
                                    "is_contact_person"
                                ],
                                "type": "object"
                            },
                            "items": {
                                "jsonld_include": {
                                    "@type": [
                                        "sparc:Person",
                                        "owl:NamedIndividual"
                                    ]
                                },
                                "properties": {
                                    "affiliation": {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    "blackfynn_user_id": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasBlackfynnUserId",
                                            "@type": "@id"
                                        },
                                        "type": "string"
                                    },
                                    "contributor_affiliation": {
                                        "anyOf": [
                                            {
                                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                                "type": "string"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasAffiliation",
                                            "@type": "@id"
                                        }
                                    },
                                    "contributor_name": {
                                        "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                        "type": "string"
                                    },
                                    "contributor_orcid": {
                                        "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                        "type": "string"
                                    },
                                    "contributor_role": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/"
                                            },
                                            "@id": "TEMP:hasRole",
                                            "@type": "@id"
                                        },
                                        "items": {
                                            "enum": [
                                                "CorrespondingAuthor",
                                                "ContactPerson",
                                                "Creator",
                                                "DataCollector",
                                                "DataCurator",
                                                "DataManager",
                                                "Distributor",
                                                "Editor",
                                                "HostingInstitution",
                                                "PrincipalInvestigator",
                                                "CoInvestigator",
                                                "Producer",
                                                "ProjectLeader",
                                                "ProjectManager",
                                                "ProjectMember",
                                                "RegistrationAgency",
                                                "RegistrationAuthority",
                                                "RelatedPerson",
                                                "Researcher",
                                                "ResearchGroup",
                                                "RightsHolder",
                                                "Sponsor",
                                                "Supervisor",
                                                "WorkPackageLeader",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "data_remote_user_id": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasDataRemoteUserId",
                                            "@type": "@id"
                                        },
                                        "type": "string"
                                    },
                                    "errors": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "first_name": {
                                        "context_value": "sparc:firstName",
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "is_contact_person": {
                                        "type": "boolean"
                                    },
                                    "last_name": {
                                        "context_value": "sparc:lastName",
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "context_value": "TEMP:middleName",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        },
                        {
                            "contains": {
                                "properties": {
                                    "contributor_role": {
                                        "contains": {
                                            "enum": [
                                                "CorrespondingAuthor",
                                                "ContactPerson"
                                            ],
                                            "type": "string"
                                        },
                                        "type": "array"
                                    }
                                },
                                "required": [
                                    "contributor_role"
                                ],
                                "type": "object"
                            },
                            "items": {
                                "jsonld_include": {
                                    "@type": [
                                        "sparc:Person",
                                        "owl:NamedIndividual"
                                    ]
                                },
                                "properties": {
                                    "affiliation": {
                                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                        "type": "string"
                                    },
                                    "blackfynn_user_id": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasBlackfynnUserId",
                                            "@type": "@id"
                                        },
                                        "type": "string"
                                    },
                                    "contributor_affiliation": {
                                        "anyOf": [
                                            {
                                                "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                                "type": "string"
                                            },
                                            {
                                                "type": "string"
                                            }
                                        ],
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasAffiliation",
                                            "@type": "@id"
                                        }
                                    },
                                    "contributor_name": {
                                        "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                        "type": "string"
                                    },
                                    "contributor_orcid": {
                                        "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                        "type": "string"
                                    },
                                    "contributor_role": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/"
                                            },
                                            "@id": "TEMP:hasRole",
                                            "@type": "@id"
                                        },
                                        "items": {
                                            "enum": [
                                                "CorrespondingAuthor",
                                                "ContactPerson",
                                                "Creator",
                                                "DataCollector",
                                                "DataCurator",
                                                "DataManager",
                                                "Distributor",
                                                "Editor",
                                                "HostingInstitution",
                                                "PrincipalInvestigator",
                                                "CoInvestigator",
                                                "Producer",
                                                "ProjectLeader",
                                                "ProjectManager",
                                                "ProjectMember",
                                                "RegistrationAgency",
                                                "RegistrationAuthority",
                                                "RelatedPerson",
                                                "Researcher",
                                                "ResearchGroup",
                                                "RightsHolder",
                                                "Sponsor",
                                                "Supervisor",
                                                "WorkPackageLeader",
                                                "Other"
                                            ],
                                            "type": "string"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "data_remote_user_id": {
                                        "context_value": {
                                            "@context": {
                                                "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                            },
                                            "@id": "TEMP:hasDataRemoteUserId",
                                            "@type": "@id"
                                        },
                                        "type": "string"
                                    },
                                    "errors": {
                                        "items": {
                                            "type": "object"
                                        },
                                        "minItems": 1,
                                        "type": "array"
                                    },
                                    "first_name": {
                                        "context_value": "sparc:firstName",
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "is_contact_person": {
                                        "type": "boolean"
                                    },
                                    "last_name": {
                                        "context_value": "sparc:lastName",
                                        "type": "string"
                                    },
                                    "middle_name": {
                                        "context_value": "TEMP:middleName",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "type": "array"
                        }
                    ]
                }
            ],
            "number_of_samples": 0,
            "number_of_subjects": 1,
            "template_schema_version": "2.0.0"
        },
        "manifest_file": [
            {
                "checksums": [
                    {
                        "cypher": "sha256",
                        "hex": "3723d51f2eca42e5db9cafa41765e5e84d35a58bc84e85f220a12aa1606792dc",
                        "type": "checksum"
                    }
                ],
                "contents": {
                    "manifest_records": [
                        {
                            "description": "asdsad"
                        }
                    ]
                },
                "dataset_id": "cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate",
                "dataset_relative_path": "manifest.xlsx",
                "errors": [
                    {
                        "blame": "stage",
                        "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'",
                        "path": "deque(['uri_api'])",
                        "pipeline_stage": "ManifestFilePipeline.data",
                        "schema_path": "deque(['allOf', 0, 'properties', 'uri_api', 'pattern'])",
                        "validator": "pattern",
                        "validator_value": "^(https?):\\/\\/([^\\s\\/]+)\\/([^\\s]*)"
                    },
                    {
                        "blame": "stage",
                        "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'",
                        "path": "deque(['uri_human'])",
                        "pipeline_stage": "ManifestFilePipeline.data",
                        "schema_path": "deque(['allOf', 0, 'properties', 'uri_human', 'pattern'])",
                        "validator": "pattern",
                        "validator_value": "^(https?):\\/\\/([^\\s\\/]+)\\/([^\\s]*)"
                    },
                    {
                        "blame": "stage",
                        "message": "{'description': 'asdsad'} is not valid under any of the given schemas",
                        "path": "deque(['contents', 'manifest_records', 0])",
                        "pipeline_stage": "ManifestFilePipeline.data",
                        "schema_path": "deque(['allOf', 1, 'properties', 'contents', 'properties', 'manifest_records', 'items', 'allOf', 1, 'oneOf'])",
                        "validator": "oneOf",
                        "validator_value": [
                            {
                                "required": [
                                    "pattern"
                                ]
                            },
                            {
                                "required": [
                                    "filename"
                                ]
                            }
                        ]
                    }
                ],
                "mimetype": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
                "remote_id": "cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx/files/2251799814135183",
                "type": "path",
                "uri_api": "file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx",
                "uri_human": "file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx"
            }
        ],
        "remote_dataset_metadata": {},
        "samples_file": {
            "errors": [
                {
                    "blame": "stage",
                    "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                    "path": "deque(['samples', 0, 'sample_id'])",
                    "pipeline_stage": "SamplesFilePipeline.data",
                    "schema_path": "deque(['properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
                    "validator": "pattern",
                    "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
                },
                {
                    "blame": "stage",
                    "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                    "path": "deque(['samples', 0, 'subject_id'])",
                    "pipeline_stage": "SamplesFilePipeline.data",
                    "schema_path": "deque(['properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
                    "validator": "pattern",
                    "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
                }
            ],
            "samples": [
                {
                    "also_in_dataset": "Cucumber",
                    "member_of": "Rhythm",
                    "pool_id": "1",
                    "primary_key": "1_1",
                    "sample_anatomical_location": "Heart",
                    "sample_experimental_group": "12",
                    "sample_id": "1",
                    "sample_type": "Glass",
                    "subject_id": "1",
                    "was_derived_from": "Plant"
                }
            ]
        },
        "subjects_file": {
            "errors": [
                {
                    "blame": "stage",
                    "message": "'species' is a required property",
                    "path": "deque(['subjects', 0])",
                    "pipeline_stage": "SubjectsFilePipeline.data",
                    "schema_path": "deque(['properties', 'subjects', 'items', 'required'])",
                    "validator": "required",
                    "validator_value": [
                        "subject_id",
                        "species"
                    ]
                }
            ],
            "subjects": [
                {
                    "sex": "fegale",
                    "subject_id": "12"
                }
            ]
        },
        "submission_file": {}
    },
    "meta": {
        "contributor_count": 1,
        "dirs": 6,
        "files": 14,
        "folder_name": "DatasetTemplate",
        "number_of_samples": 0,
        "number_of_subjects": 1,
        "principal_investigator": "/contributors/0",
        "sample_count": 1,
        "size": 156331,
        "sparse": false,
        "subject_count": 1,
        "techniques": [],
        "template_schema_version": "2.0.0",
        "timestamp_created": null,
        "timestamp_updated": "2022-03-16 22:06:23.969569+00:00",
        "timestamp_updated_contents": "2022-03-15 21:33:18.549428+00:00",
        "uri_api": "file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate",
        "uri_human": "file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate"
    },
    "prov": {
        "remote": "local",
        "sparcur_version": "0.0.1.dev3",
        "timestamp_export_start": "2022-03-16T22:32:19,037831Z"
    },
    "samples": [
        {
            "also_in_dataset": "Cucumber",
            "member_of": "Rhythm",
            "pool_id": "1",
            "primary_key": "1_1",
            "sample_anatomical_location": "Heart",
            "sample_experimental_group": "12",
            "sample_id": "1",
            "sample_type": "Glass",
            "subject_id": "1",
            "was_derived_from": "Plant"
        }
    ],
    "specimen_dirs": {
        "errors": [
            {
                "blame": "submission",
                "file_path": "C:\\Users\\CMarroquin\\temp-datasets\\DatasetTemplate",
                "message": "There are specimens that have no corresponding directory!\n{'12', '1_1'}",
                "pipeline_stage": "Derives.validate_structure",
                "type": null
            },
            {
                "blame": "submission",
                "file_path": "C:\\Users\\CMarroquin\\temp-datasets\\DatasetTemplate",
                "message": "No folder for sample 1",
                "pipeline_stage": "Derives.validate_structure",
                "type": null
            }
        ]
    },
    "status": {
        "curation_errors": [
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "inputs",
                    "samples_file",
                    "samples",
                    0,
                    "subject_id"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "inputs",
                    "samples_file",
                    "samples",
                    0,
                    "sample_id"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'samples_file', 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'species' is a required property",
                "path": [
                    "inputs",
                    "subjects_file",
                    "subjects",
                    0
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'subjects_file', 'properties', 'subjects', 'items', 'required'])",
                "validator": "required",
                "validator_value": [
                    "subject_id",
                    "species"
                ]
            },
            {
                "blame": "stage",
                "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
                "path": [
                    "inputs",
                    "dataset_description_file",
                    "contributors"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'properties', 'contributors', 'oneOf'])",
                "validator": "oneOf",
                "validator_value": [
                    {
                        "contains": {
                            "properties": {
                                "is_contact_person": {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_contact_person"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "jsonld_include": {
                                "@type": [
                                    "sparc:Person",
                                    "owl:NamedIndividual"
                                ]
                            },
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    {
                        "contains": {
                            "properties": {
                                "contributor_role": {
                                    "contains": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "contributor_role"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "jsonld_include": {
                                "@type": [
                                    "sparc:Person",
                                    "owl:NamedIndividual"
                                ]
                            },
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                ]
            },
            {
                "blame": "stage",
                "message": "'protocol_url_or_doi' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'funding' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'description' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'name' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'inputs', 'properties', 'dataset_description_file', 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'records' is a required property",
                "path": [
                    "specimen_dirs"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'specimen_dirs', 'required'])",
                "validator": "required",
                "validator_value": [
                    "records"
                ]
            },
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "samples",
                    0,
                    "subject_id"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "samples",
                    0,
                    "sample_id"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'species' is a required property",
                "path": [
                    "subjects",
                    0
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'subjects', 'items', 'required'])",
                "validator": "required",
                "validator_value": [
                    "subject_id",
                    "species"
                ]
            },
            {
                "blame": "stage",
                "message": "1 is not valid under any of the given schemas",
                "path": [
                    "contributors",
                    0,
                    "contributor_affiliation"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'items', 'properties', 'contributor_affiliation', 'anyOf'])",
                "validator": "anyOf",
                "validator_value": [
                    {
                        "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                        "type": "string"
                    },
                    {
                        "type": "string"
                    }
                ]
            },
            {
                "blame": "stage",
                "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator'], 'id': 'file:///C:/Users/CMarroquin/temp-datasets/DatasetTemplate/contributors/no-orcid-no-name'}] is not valid under any of the given schemas",
                "path": [
                    "contributors"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'contributors', 'oneOf'])",
                "validator": "oneOf",
                "validator_value": [
                    {
                        "contains": {
                            "properties": {
                                "is_contact_person": {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_contact_person"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    {
                        "contains": {
                            "properties": {
                                "contributor_role": {
                                    "contains": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "contributor_role"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                ]
            },
            {
                "blame": "stage",
                "message": "[] is too short",
                "path": [
                    "meta",
                    "techniques"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'techniques', 'minItems'])",
                "validator": "minItems",
                "validator_value": 1
            },
            {
                "blame": "stage",
                "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://api\\\\.pennsieve\\\\.io/(datasets|packages)/'",
                "path": [
                    "meta",
                    "uri_api"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_api', 'pattern'])",
                "validator": "pattern",
                "validator_value": "^https://api\\.pennsieve\\.io/(datasets|packages)/"
            },
            {
                "blame": "stage",
                "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://app\\\\.pennsieve\\\\.io/N:organization:'",
                "path": [
                    "meta",
                    "uri_human"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'uri_human', 'pattern'])",
                "validator": "pattern",
                "validator_value": "^https://app\\.pennsieve\\.io/N:organization:"
            },
            {
                "blame": "stage",
                "message": "None is not of type 'string'",
                "path": [
                    "meta",
                    "timestamp_created"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'properties', 'timestamp_created', 'type'])",
                "validator": "type",
                "validator_value": "string"
            },
            {
                "blame": "stage",
                "message": "'title' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'modality' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'organ' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'species' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'award_number' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'protocol_url_or_doi' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'funding' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'description' is a required property",
                "path": [
                    "meta"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'meta', 'allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "number_of_subjects",
                    "number_of_samples",
                    "award_number",
                    "principal_investigator",
                    "species",
                    "organ",
                    "modality",
                    "techniques",
                    "contributor_count",
                    "uri_human",
                    "uri_api",
                    "sparse",
                    "files",
                    "dirs",
                    "size",
                    "folder_name",
                    "title",
                    "template_schema_version",
                    "number_of_subjects",
                    "number_of_samples",
                    "timestamp_created",
                    "timestamp_updated",
                    "timestamp_updated_contents"
                ]
            },
            {
                "blame": "stage",
                "message": "'cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^N:dataset:'",
                "path": [
                    "id"
                ],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "^N:dataset:"
            },
            {
                "blame": "stage",
                "message": "'path_metadata' is a required property",
                "path": [],
                "pipeline_stage": "PipelineExtras.data",
                "schema_path": "deque(['allOf', 0, 'required'])",
                "validator": "required",
                "validator_value": [
                    "id",
                    "meta",
                    "contributors",
                    "path_metadata",
                    "prov"
                ]
            }
        ],
        "curation_index": 28,
        "error_index": 41,
        "path_error_report": {
            "#/": {
                "error_count": 1,
                "messages": [
                    "'path_metadata' is a required property"
                ]
            },
            "#/contributors": {
                "error_count": 1,
                "messages": [
                    "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator'], 'id': 'file:///C:/Users/CMarroquin/temp-datasets/DatasetTemplate/contributors/no-orcid-no-name'}] is not valid under any of the given schemas"
                ]
            },
            "#/contributors/-1/contributor_affiliation": {
                "error_count": 1,
                "messages": [
                    "1 is not valid under any of the given schemas"
                ]
            },
            "#/id": {
                "error_count": 1,
                "messages": [
                    "'cgeNh_H8zjDDsGcJn2wlicHHZcjoavLjuiZxzsRAw2ix6Tp4Bwutpuj2ykK8i1JamSX9nurlL6MSLF7LlUicLA:C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^N:dataset:'"
                ]
            },
            "#/inputs/dataset_description_file": {
                "error_count": 8,
                "messages": [
                    "'description' is a required property",
                    "'funding' is a required property",
                    "'name' is a required property",
                    "'protocol_url_or_doi' is a required property"
                ]
            },
            "#/inputs/dataset_description_file/contributors": {
                "error_count": 1,
                "messages": [
                    "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas"
                ]
            },
            "#/inputs/manifest_file/-1/contents/manifest_records/-1": {
                "error_count": 1,
                "messages": [
                    "{'description': 'asdsad'} is not valid under any of the given schemas"
                ]
            },
            "#/inputs/manifest_file/-1/uri_api": {
                "error_count": 1,
                "messages": [
                    "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'"
                ]
            },
            "#/inputs/manifest_file/-1/uri_human": {
                "error_count": 1,
                "messages": [
                    "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'"
                ]
            },
            "#/inputs/samples_file/samples/-1/sample_id": {
                "error_count": 1,
                "messages": [
                    "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'"
                ]
            },
            "#/inputs/samples_file/samples/-1/subject_id": {
                "error_count": 1,
                "messages": [
                    "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'"
                ]
            },
            "#/inputs/subjects_file/subjects/-1": {
                "error_count": 1,
                "messages": [
                    "'species' is a required property"
                ]
            },
            "#/meta": {
                "error_count": 8,
                "messages": [
                    "'award_number' is a required property",
                    "'description' is a required property",
                    "'funding' is a required property",
                    "'modality' is a required property",
                    "'organ' is a required property",
                    "'protocol_url_or_doi' is a required property",
                    "'species' is a required property",
                    "'title' is a required property"
                ]
            },
            "#/meta/techniques": {
                "error_count": 1,
                "messages": [
                    "[] is too short"
                ]
            },
            "#/meta/timestamp_created": {
                "error_count": 1,
                "messages": [
                    "None is not of type 'string'"
                ]
            },
            "#/meta/uri_api": {
                "error_count": 1,
                "messages": [
                    "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://api\\\\.pennsieve\\\\.io/(datasets|packages)/'"
                ]
            },
            "#/meta/uri_human": {
                "error_count": 1,
                "messages": [
                    "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate' does not match '^https://app\\\\.pennsieve\\\\.io/N:organization:'"
                ]
            },
            "#/samples/-1/sample_id": {
                "error_count": 1,
                "messages": [
                    "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'"
                ]
            },
            "#/samples/-1/subject_id": {
                "error_count": 1,
                "messages": [
                    "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'"
                ]
            },
            "#/specimen_dirs": {
                "error_count": 3,
                "messages": [
                    "'records' is a required property",
                    "No folder for sample 1",
                    "There are specimens that have no corresponding directory!\n{'12', '1_1'}"
                ]
            },
            "#/subjects/-1": {
                "error_count": 1,
                "messages": [
                    "'species' is a required property"
                ]
            }
        },
        "submission_errors": [
            {
                "blame": "submission",
                "file_path": "C:\\Users\\CMarroquin\\temp-datasets\\DatasetTemplate",
                "message": "No folder for sample 1",
                "path": [
                    "specimen_dirs"
                ],
                "pipeline_stage": "Derives.validate_structure",
                "type": null
            },
            {
                "blame": "submission",
                "file_path": "C:\\Users\\CMarroquin\\temp-datasets\\DatasetTemplate",
                "message": "There are specimens that have no corresponding directory!\n{'12', '1_1'}",
                "path": [
                    "specimen_dirs"
                ],
                "pipeline_stage": "Derives.validate_structure",
                "type": null
            },
            {
                "blame": "stage",
                "message": "[{'contributor_affiliation': 1, 'contributor_role': ['PrincipalInvestigator']}] is not valid under any of the given schemas",
                "path": [
                    "inputs",
                    "dataset_description_file",
                    "contributors"
                ],
                "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                "schema_path": "deque(['properties', 'contributors', 'oneOf'])",
                "validator": "oneOf",
                "validator_value": [
                    {
                        "contains": {
                            "properties": {
                                "is_contact_person": {
                                    "enum": [
                                        true
                                    ],
                                    "type": "boolean"
                                }
                            },
                            "required": [
                                "is_contact_person"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "jsonld_include": {
                                "@type": [
                                    "sparc:Person",
                                    "owl:NamedIndividual"
                                ]
                            },
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    },
                    {
                        "contains": {
                            "properties": {
                                "contributor_role": {
                                    "contains": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson"
                                        ],
                                        "type": "string"
                                    },
                                    "type": "array"
                                }
                            },
                            "required": [
                                "contributor_role"
                            ],
                            "type": "object"
                        },
                        "items": {
                            "jsonld_include": {
                                "@type": [
                                    "sparc:Person",
                                    "owl:NamedIndividual"
                                ]
                            },
                            "properties": {
                                "affiliation": {
                                    "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                    "type": "string"
                                },
                                "blackfynn_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasBlackfynnUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "contributor_affiliation": {
                                    "anyOf": [
                                        {
                                            "pattern": "^https://ror.org/0[0-9a-z]{6}[0-9]{2}$",
                                            "type": "string"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasAffiliation",
                                        "@type": "@id"
                                    }
                                },
                                "contributor_name": {
                                    "pattern": "^((([Vv](an|on))|[Dd][ia]|([Dd]e( [Ll]os)?)) )?[^, ]+, [^,]+$",
                                    "type": "string"
                                },
                                "contributor_orcid": {
                                    "pattern": "^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$|^https://orcid.org/0000-000(1-[5-9]|2-[0-9]|3-[0-4])[0-9][0-9][0-9]-[0-9][0-9][0-9]([0-9]|X)$",
                                    "type": "string"
                                },
                                "contributor_role": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/"
                                        },
                                        "@id": "TEMP:hasRole",
                                        "@type": "@id"
                                    },
                                    "items": {
                                        "enum": [
                                            "CorrespondingAuthor",
                                            "ContactPerson",
                                            "Creator",
                                            "DataCollector",
                                            "DataCurator",
                                            "DataManager",
                                            "Distributor",
                                            "Editor",
                                            "HostingInstitution",
                                            "PrincipalInvestigator",
                                            "CoInvestigator",
                                            "Producer",
                                            "ProjectLeader",
                                            "ProjectManager",
                                            "ProjectMember",
                                            "RegistrationAgency",
                                            "RegistrationAuthority",
                                            "RelatedPerson",
                                            "Researcher",
                                            "ResearchGroup",
                                            "RightsHolder",
                                            "Sponsor",
                                            "Supervisor",
                                            "WorkPackageLeader",
                                            "Other"
                                        ],
                                        "type": "string"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "data_remote_user_id": {
                                    "context_value": {
                                        "@context": {
                                            "@base": "http://uri.interlex.org/temp/uris/id-fallthrough/"
                                        },
                                        "@id": "TEMP:hasDataRemoteUserId",
                                        "@type": "@id"
                                    },
                                    "type": "string"
                                },
                                "errors": {
                                    "items": {
                                        "type": "object"
                                    },
                                    "minItems": 1,
                                    "type": "array"
                                },
                                "first_name": {
                                    "context_value": "sparc:firstName",
                                    "type": "string"
                                },
                                "id": {
                                    "type": "string"
                                },
                                "is_contact_person": {
                                    "type": "boolean"
                                },
                                "last_name": {
                                    "context_value": "sparc:lastName",
                                    "type": "string"
                                },
                                "middle_name": {
                                    "context_value": "TEMP:middleName",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "type": "array"
                    }
                ]
            },
            {
                "blame": "stage",
                "message": "'protocol_url_or_doi' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                "schema_path": "deque(['required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'funding' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                "schema_path": "deque(['required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'description' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                "schema_path": "deque(['required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "'name' is a required property",
                "path": [
                    "inputs",
                    "dataset_description_file"
                ],
                "pipeline_stage": "DatasetDescriptionFilePipeline.data",
                "schema_path": "deque(['required'])",
                "validator": "required",
                "validator_value": [
                    "template_schema_version",
                    "name",
                    "description",
                    "funding",
                    "protocol_url_or_doi",
                    "contributors",
                    "number_of_subjects",
                    "number_of_samples"
                ]
            },
            {
                "blame": "stage",
                "message": "{'description': 'asdsad'} is not valid under any of the given schemas",
                "path": [
                    "inputs",
                    "manifest_file",
                    0,
                    "contents",
                    "manifest_records",
                    0
                ],
                "pipeline_stage": "ManifestFilePipeline.data",
                "schema_path": "deque(['allOf', 1, 'properties', 'contents', 'properties', 'manifest_records', 'items', 'allOf', 1, 'oneOf'])",
                "validator": "oneOf",
                "validator_value": [
                    {
                        "required": [
                            "pattern"
                        ]
                    },
                    {
                        "required": [
                            "filename"
                        ]
                    }
                ]
            },
            {
                "blame": "stage",
                "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'",
                "path": [
                    "inputs",
                    "manifest_file",
                    0,
                    "uri_human"
                ],
                "pipeline_stage": "ManifestFilePipeline.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'uri_human', 'pattern'])",
                "validator": "pattern",
                "validator_value": "^(https?):\\/\\/([^\\s\\/]+)\\/([^\\s]*)"
            },
            {
                "blame": "stage",
                "message": "'file://C:/Users/CMarroquin/temp-datasets/DatasetTemplate/manifest.xlsx' does not match '^(https?):\\\\/\\\\/([^\\\\s\\\\/]+)\\\\/([^\\\\s]*)'",
                "path": [
                    "inputs",
                    "manifest_file",
                    0,
                    "uri_api"
                ],
                "pipeline_stage": "ManifestFilePipeline.data",
                "schema_path": "deque(['allOf', 0, 'properties', 'uri_api', 'pattern'])",
                "validator": "pattern",
                "validator_value": "^(https?):\\/\\/([^\\s\\/]+)\\/([^\\s]*)"
            },
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "inputs",
                    "samples_file",
                    "samples",
                    0,
                    "subject_id"
                ],
                "pipeline_stage": "SamplesFilePipeline.data",
                "schema_path": "deque(['properties', 'samples', 'items', 'properties', 'subject_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'1' does not match '[A-Za-z0-9][^ \\n\\t*|:\\\\/<>\"\\\\?]+'",
                "path": [
                    "inputs",
                    "samples_file",
                    "samples",
                    0,
                    "sample_id"
                ],
                "pipeline_stage": "SamplesFilePipeline.data",
                "schema_path": "deque(['properties', 'samples', 'items', 'properties', 'sample_id', 'pattern'])",
                "validator": "pattern",
                "validator_value": "[A-Za-z0-9][^ \n\t*|:\\/<>\"\\?]+"
            },
            {
                "blame": "stage",
                "message": "'species' is a required property",
                "path": [
                    "inputs",
                    "subjects_file",
                    "subjects",
                    0
                ],
                "pipeline_stage": "SubjectsFilePipeline.data",
                "schema_path": "deque(['properties', 'subjects', 'items', 'required'])",
                "validator": "required",
                "validator_value": [
                    "subject_id",
                    "species"
                ]
            }
        ],
        "submission_index": 13,
        "unclassified_errors": [],
        "unclassified_index": 0,
        "unclassified_stages": []
    },
    "subjects": [
        {
            "sex": "fegale",
            "subject_id": "12"
        }
    ],
    "subjects_from_samples": [
        {
            "subject_id": "1"
        }
    ]
}